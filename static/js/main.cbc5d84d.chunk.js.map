{"version":3,"sources":["components/UserPositionMarker.js","components/AppointmentForm.js","components/MapDisplay.js","components/NavBar.js","components/AppointmentsList.js","services/http.service.js","App.js","reportWebVitals.js","index.js"],"names":["UserPositionMarker","props","position","setPosition","map","useMapEvents","locationfound","e","latlng","flyTo","getZoom","useEffect","locate","Marker","Popup","AppointmentForm","doctorsPosition","appointmentsList","setAppointmentsList","useState","label","name","email","datetime","appointmentDetails","setAppointmentDetails","handleInputChange","event","target","value","prevState","className","onSubmit","required","type","onChange","style","marginTop","onClick","length","alert","MapDisplay","userPosition","setUserPosition","MapContainer","center","lat","lng","zoom","scrollWheelZoom","height","TileLayer","attribution","url","index","latitude","longitude","NavBar","view","setView","handleNavigation","route","fontWeight","AppointmentsList","appointment","Date","toDateString","API_KEY","process","App","userLocality","setUserLocality","setDoctorsPosition","axios","get","then","res","data","locality","catch","error","console","log","getDoctorsPosition","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cbc5d84d.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Marker, Popup, useMapEvents } from \"react-leaflet\";\n\nexport const UserPositionMarker = (props) => {\n  const { position, setPosition } = props;\n  const map = useMapEvents({\n    locationfound(e) {\n      setPosition(e.latlng);\n      map.flyTo(e.latlng, map.getZoom());\n    },\n  });\n\n  useEffect(() => {\n    if (!position) {\n      map.locate();\n    }\n  }, []);\n\n  return position === null ? null : (\n    <Marker position={position}>\n      <Popup>You are here</Popup>\n    </Marker>\n  );\n};\nexport default UserPositionMarker;\n","/* eslint-disable no-undef */\nimport React, { useState } from \"react\";\nimport \"./AppointmentForm.css\";\n\nexport const AppointmentForm = ({\n  doctorsPosition,\n  appointmentsList,\n  setAppointmentsList,\n}) => {\n  const [appointmentDetails, setAppointmentDetails] = useState({\n    label: doctorsPosition.label,\n    name: \"\",\n    email: \"\",\n    datetime: \"\",\n  });\n\n  const handleSubmit = () => {\n    if (\n      appointmentDetails.name.length === 0 ||\n      appointmentDetails.email.length === 0 ||\n      appointmentDetails.datetime.length === 0\n    ) {\n      alert(\"Please fill in all fields before submitting\");\n    } else {\n      setAppointmentsList([...appointmentsList, appointmentDetails]);\n      alert(\"Booking successful!\");\n    }\n  };\n\n  const handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    setAppointmentDetails((prevState) => ({ ...prevState, [name]: value }));\n  };\n  return (\n    <>\n      <h2>{doctorsPosition.label}</h2>\n      <form className=\"form-container\" onSubmit={() => {}}>\n        <label>\n          Name\n          <input\n            required\n            className=\"text-input\"\n            name=\"name\"\n            type=\"text\"\n            onChange={handleInputChange}\n          />\n        </label>\n        <label>\n          Email\n          <input\n            required\n            className=\"text-input\"\n            name=\"email\"\n            type=\"text\"\n            onChange={handleInputChange}\n          />\n        </label>\n        <label>\n          Preferred Time\n          <input\n            required\n            className=\"text-input\"\n            type=\"datetime-local\"\n            name=\"datetime\"\n            onChange={handleInputChange}\n          />\n        </label>\n        <input\n          style={{ marginTop: 10 }}\n          type=\"button\"\n          value=\"Book Appointment\"\n          onClick={handleSubmit}\n        />\n      </form>\n    </>\n  );\n};\n\nexport default AppointmentForm;\n","import React from \"react\";\nimport { MapContainer, Marker, TileLayer, Popup } from \"react-leaflet\";\nimport UserPositionMarker from \"./UserPositionMarker\";\nimport AppointmentForm from \"./AppointmentForm\";\n\nexport const MapDisplay = ({\n  appointmentsList,\n  setAppointmentsList,\n  userPosition,\n  setUserPosition,\n  doctorsPosition,\n}) => {\n  return (\n    <MapContainer\n      center={\n        userPosition ? [userPosition.lat, userPosition.lng] : [51.505, -0.09]\n      }\n      zoom={13}\n      scrollWheelZoom={true}\n      style={{ height: \"80vh\" }}\n    >\n      <TileLayer\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n      <UserPositionMarker\n        position={userPosition}\n        setPosition={setUserPosition}\n      />\n      {doctorsPosition.length > 0 &&\n        userPosition &&\n        doctorsPosition.map((doctorsPosition, index) => (\n          <Marker\n            key={index}\n            position={[doctorsPosition.latitude, doctorsPosition.longitude]}\n          >\n            <Popup>\n              <AppointmentForm\n                appointmentsList={appointmentsList}\n                setAppointmentsList={setAppointmentsList}\n                doctorsPosition={doctorsPosition}\n              />\n            </Popup>\n          </Marker>\n        ))}\n    </MapContainer>\n  );\n};\nexport default MapDisplay;\n","import React from \"react\";\nimport \"./NavBar.css\";\n\nexport const NavBar = ({ view, setView }) => {\n  const handleNavigation = (route) => {\n    setView(route);\n  };\n  return (\n    <header>\n      <h1>GP Finder</h1>\n      <ul className=\"navigation\">\n        <li\n          onClick={() => {\n            handleNavigation(\"mapDisplay\");\n          }}\n          className=\"navigation-item\"\n          style={view === \"mapDisplay\" ? { fontWeight: \"bold\" } : {}}\n        >\n          Find a Doctor\n        </li>\n        <li\n          onClick={() => {\n            handleNavigation(\"appointmentsList\");\n          }}\n          className=\"navigation-item\"\n          style={view === \"appointmentsList\" ? { fontWeight: \"bold\" } : {}}\n        >\n          Appointments List\n        </li>\n      </ul>\n    </header>\n  );\n};\n\nexport default NavBar;\n","/* eslint-disable no-undef */\nimport React from \"react\";\n\nexport const AppointmentsList = ({ appointmentsList }) => {\n  return (\n    <>\n      <h2>Appointments</h2>\n      {appointmentsList.map((appointment, index) => (\n        <ul key={index}>\n          <li>{appointment.label}</li>\n          <li>{appointment.name}</li>\n          <li>{appointment.email}</li>\n          <li>{new Date(appointment.datetime).toDateString()}</li>\n        </ul>\n      ))}\n    </>\n  );\n};\n\nexport default AppointmentsList;\n","import axios from \"axios\";\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nexport const getUserLocality = (position) =>\n  axios.get(\n    `http://api.positionstack.com/v1/reverse?access_key=${API_KEY}&query=${position.lat},${position.lng}`\n  );\n\nexport const getDoctorsPosition = (userLocality) =>\n  axios.get(\n    `http://api.positionstack.com/v1/forward?access_key=${API_KEY}&query=medical&region=${userLocality}&limit=20`\n  );\n","/* eslint-disable no-undef */\nimport React, { useState, useEffect } from \"react\";\nimport { MapDisplay } from \"./components/MapDisplay\";\nimport \"./App.css\";\nimport NavBar from \"./components/NavBar\";\nimport AppointmentsList from \"./components/AppointmentsList\";\n\nimport { getUserLocality, getDoctorsPosition } from \"./services/http.service\";\n\nexport const App = () => {\n  const [view, setView] = useState(\"mapDisplay\");\n  const [appointmentsList, setAppointmentsList] = useState([]);\n  const [userPosition, setUserPosition] = useState(null);\n  const [userLocality, setUserLocality] = useState(null);\n  const [doctorsPosition, setDoctorsPosition] = useState([]);\n\n  useEffect(() => {\n    if (userPosition) {\n      getUserLocality(userPosition)\n        .then((res) => setUserLocality(res.data.data[0].locality))\n        .catch((error) => console.log(error));\n    }\n  }, [userPosition]);\n\n  useEffect(() => {\n    if (userLocality) {\n      getDoctorsPosition(userLocality)\n        .then((res) => setDoctorsPosition(res.data.data))\n        .catch((error) => console.log(error));\n    }\n  }, [userLocality]);\n  return (\n    <>\n      <NavBar view={view} setView={setView} />\n      {view === \"mapDisplay\" ? (\n        <MapDisplay\n          appointmentsList={appointmentsList}\n          setAppointmentsList={setAppointmentsList}\n          userPosition={userPosition}\n          setUserPosition={setUserPosition}\n          userLocality={userLocality}\n          doctorsPosition={doctorsPosition}\n        />\n      ) : (\n        <AppointmentsList appointmentsList={appointmentsList} />\n      )}\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}